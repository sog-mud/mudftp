Last revised: August 15, 1998

1. What is mudFTP?
==================

mudFTP is a way to retrieve text entries from the MUD you are connected to
to your local system, edit them locally with your favorite editor, then
upload them back up.

The protocol uses a separate port for connections. A client program connects
to that port and retrieves/send the files, typically invoked by your
MUD client. Alternatively, the mudFTP client program runs outside your
MUD client and spawns an editor whenever the MUD server asks it to. The
latter is preferred in multi-window environments.

2. Installation
===============

Check the file SERVERS for a list of MUD servers that are supported
using patches. If you cannot find your server there, you could try to
apply the patch for the server which is closest to yours. The patches
change mostly code that is rarely touched by MUD programmers.


3. Files
========

Currently, mudFTP supports only one kind of files: "temporary" files editing
using string_append from the NiMUD/ILAB OLC package. The file currently
edited by the user is the only file that the user can retrieve and send.

In the future, it may be possible to edit other files. This would perhaps
allow for an easy interface to online building: for example, retrieve
mobs/1425 would retrieve all data about mob 1425. Then
mobs/1425/description would retrieve its description.

However, as it is now, even with this limitation, mudFTP is very useful for
editing notes (if you are handling them via the string editor),
descriptions, MUD programs, etc.


4. Client side
==============

Please refer to the file CLIENT for instructions on how to use the
mudFTP client.


5. History of mudFTP
====================

The first version of the mudFTP protocol described a pull-only client:
the client would connect to the remote mudFTP server, ask for a
filename then retrieve the file and exit. The client had to work
together with a shell script that would run the client twice.

This however, made it impossible to use the client if the MUD client
you were using did not support triggers and running of external
programs. It also was quite difficult to set up.

As my eventual goal was world domination, this was not acceptable.
Oliver Jowett then suggested to use a pull system: the mudFTP client
would not be invoked by the editor, but seperately by the user, and
would then connect to the remote server and sit there idle. When a text
was to be edited, the remote server would push it to the mudFTP client,
which would then invoke the editor. Thus, the user would have only to
remember to invoke the mudFTP client when fist connecting to the MUD.

The push/pull techniques were combined, so that people who preferred
the pull technique (e.g. lacking multiple windows) could still use
mudFTP.

6. Support
==========

Visit http://www.abandoned.org/drylock/mudftp/ for information about
new mudFTP releases and support mailing lists.

